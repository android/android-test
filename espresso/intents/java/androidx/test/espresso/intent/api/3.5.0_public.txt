// Signature format: 3.0
package androidx.test.espresso.intent {

  public interface ActivityResultFunction {
    method public android.app.Instrumentation.ActivityResult! apply(android.content.Intent!);
  }

  public final class Checks {
    method public static void checkArgument(boolean);
    method public static void checkArgument(boolean, Object!);
    method public static void checkArgument(boolean, String!, java.lang.Object!...);
    method public static <T> T! checkNotNull(T!);
    method public static <T> T! checkNotNull(T!, Object!);
    method public static <T> T! checkNotNull(T!, String!, java.lang.Object!...);
    method public static void checkState(boolean, Object!);
    method public static void checkState(boolean, String!, java.lang.Object!...);
  }

  public final class Intents {
    method public static void assertNoUnverifiedIntents();
    method public static void init();
    method public static void intended(org.hamcrest.Matcher<android.content.Intent!>!);
    method public static void intended(org.hamcrest.Matcher<android.content.Intent!>!, androidx.test.espresso.intent.VerificationMode!);
    method @com.google.errorprone.annotations.CheckReturnValue public static androidx.test.espresso.intent.OngoingStubbing! intending(org.hamcrest.Matcher<android.content.Intent!>!);
    method public static void release();
    method public static androidx.test.espresso.intent.VerificationMode! times(int);
  }

  public final class OngoingStubbing {
    method public void respondWith(android.app.Instrumentation.ActivityResult!);
    method public void respondWithFunction(androidx.test.espresso.intent.ActivityResultFunction!);
  }

  public interface ResettingStubber extends androidx.test.runner.intent.IntentStubber {
    method public void initialize();
    method public boolean isInitialized();
    method public void reset();
    method public void setActivityResultForIntent(org.hamcrest.Matcher<android.content.Intent!>!, android.app.Instrumentation.ActivityResult!);
    method public void setActivityResultFunctionForIntent(org.hamcrest.Matcher<android.content.Intent!>!, androidx.test.espresso.intent.ActivityResultFunction!);
  }

  public final class ResettingStubberImpl implements androidx.test.espresso.intent.ResettingStubber {
    ctor public ResettingStubberImpl();
    method public android.app.Instrumentation.ActivityResult! getActivityResultForIntent(android.content.Intent!);
    method public void initialize();
    method public boolean isInitialized();
    method public void reset();
    method public void setActivityResultForIntent(org.hamcrest.Matcher<android.content.Intent!>!, android.app.Instrumentation.ActivityResult!);
    method public void setActivityResultFunctionForIntent(org.hamcrest.Matcher<android.content.Intent!>!, androidx.test.espresso.intent.ActivityResultFunction!);
  }

  public interface ResolvedIntent {
    method public boolean canBeHandledBy(String!);
    method public android.content.Intent! getIntent();
  }

  public interface VerifiableIntent extends androidx.test.espresso.intent.ResolvedIntent {
    method public boolean hasBeenVerified();
    method public void markAsVerified();
  }

  public interface VerificationMode {
    method public void verify(org.hamcrest.Matcher<android.content.Intent!>!, java.util.List<androidx.test.espresso.intent.VerifiableIntent!>!);
  }

  public final class VerificationModes {
    method public static androidx.test.espresso.intent.VerificationMode! noUnverifiedIntents();
    method public static androidx.test.espresso.intent.VerificationMode! times(int);
  }

}

package androidx.test.espresso.intent.matcher {

  @com.google.errorprone.annotations.CheckReturnValue public final class BundleMatchers {
    method public static org.hamcrest.Matcher<android.os.Bundle!> doesNotHaveKey(String!);
    method public static org.hamcrest.Matcher<android.os.Bundle!> doesNotHaveKey(org.hamcrest.Matcher<java.lang.String!>!);
    method public static <T> org.hamcrest.Matcher<android.os.Bundle!>! hasEntry(String!, T!);
    method public static org.hamcrest.Matcher<android.os.Bundle!>! hasEntry(String!, org.hamcrest.Matcher<?>!);
    method public static org.hamcrest.Matcher<android.os.Bundle!>! hasEntry(org.hamcrest.Matcher<java.lang.String!>!, org.hamcrest.Matcher<?>!);
    method public static org.hamcrest.Matcher<android.os.Bundle!>! hasKey(String!);
    method public static org.hamcrest.Matcher<android.os.Bundle!>! hasKey(org.hamcrest.Matcher<java.lang.String!>!);
    method public static <T> org.hamcrest.Matcher<android.os.Bundle!>! hasValue(T!);
    method public static org.hamcrest.Matcher<android.os.Bundle!>! hasValue(org.hamcrest.Matcher<?>!);
    method public static org.hamcrest.Matcher<android.os.Bundle!>! isEmpty();
    method public static org.hamcrest.Matcher<android.os.Bundle!>! isEmptyOrNull();
  }

  @com.google.errorprone.annotations.CheckReturnValue public final class ComponentNameMatchers {
    method public static org.hamcrest.Matcher<android.content.ComponentName!>! hasClassName(String!);
    method public static org.hamcrest.Matcher<android.content.ComponentName!>! hasClassName(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.ComponentName!>! hasMyPackageName();
    method public static org.hamcrest.Matcher<android.content.ComponentName!>! hasPackageName(String!);
    method public static org.hamcrest.Matcher<android.content.ComponentName!>! hasPackageName(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.ComponentName!>! hasShortClassName(String!);
    method public static org.hamcrest.Matcher<android.content.ComponentName!>! hasShortClassName(org.hamcrest.Matcher<java.lang.String!>!);
  }

  @com.google.errorprone.annotations.CheckReturnValue public final class IntentMatchers {
    method public static org.hamcrest.Matcher<android.content.Intent!>! anyIntent();
    method public static org.hamcrest.Matcher<android.content.Intent!> doesNotHaveExtraWithKey(String!);
    method public static org.hamcrest.Matcher<android.content.Intent!> doesNotHaveExtraWithKey(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! filterEquals(android.content.Intent!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasAction(String!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasAction(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasCategories(java.util.Set<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasCategories(org.hamcrest.Matcher<? extends java.lang.Iterable<? super java.lang.String>>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasComponent(String!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasComponent(android.content.ComponentName!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasComponent(org.hamcrest.Matcher<android.content.ComponentName!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasData(String!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasData(android.net.Uri!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasData(org.hamcrest.Matcher<android.net.Uri!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasDataString(org.hamcrest.Matcher<java.lang.String!>!);
    method public static <T> org.hamcrest.Matcher<android.content.Intent!>! hasExtra(String!, T!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasExtra(String!, org.hamcrest.Matcher<?>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasExtra(org.hamcrest.Matcher<java.lang.String!>!, org.hamcrest.Matcher<?>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasExtraWithKey(String!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasExtraWithKey(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasExtras(org.hamcrest.Matcher<android.os.Bundle!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasFlag(int);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasFlags(int...);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasFlags(int);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasPackage(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasPackage(String!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasType(String!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! hasType(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.content.Intent!>! isInternal();
    method public static org.hamcrest.Matcher<android.content.Intent!>! toPackage(String!);
  }

  @com.google.errorprone.annotations.CheckReturnValue public final class UriMatchers {
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasHost(String!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasHost(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasParamWithName(String!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasParamWithName(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasParamWithValue(String!, String!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasParamWithValue(org.hamcrest.Matcher<java.lang.String!>!, org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasPath(String!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasPath(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasScheme(String!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasScheme(org.hamcrest.Matcher<java.lang.String!>!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasSchemeSpecificPart(String!, String!);
    method public static org.hamcrest.Matcher<android.net.Uri!>! hasSchemeSpecificPart(org.hamcrest.Matcher<java.lang.String!>!, org.hamcrest.Matcher<java.lang.String!>!);
  }

}

package androidx.test.espresso.intent.rule {

  public final class IntentsRule extends org.junit.rules.ExternalResource {
    ctor public IntentsRule();
    method protected void before();
  }

  @Deprecated public class IntentsTestRule<T extends android.app.Activity> extends androidx.test.rule.ActivityTestRule<T> {
    ctor @Deprecated public IntentsTestRule(Class<T!>!);
    ctor @Deprecated public IntentsTestRule(Class<T!>!, boolean);
    ctor @Deprecated public IntentsTestRule(Class<T!>!, boolean, boolean);
  }

}

