// Signature format: 3.0
package androidx.test.annotation {

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME) @java.lang.annotation.Target({java.lang.annotation.ElementType.METHOD, java.lang.annotation.ElementType.TYPE}) public @interface UiThreadTest {
  }

}

package androidx.test.rule {

  @Deprecated public class ActivityTestRule<T extends android.app.Activity> implements org.junit.rules.TestRule {
    ctor @Deprecated public ActivityTestRule(androidx.test.runner.intercepting.SingleActivityFactory<T!>!, boolean, boolean);
    ctor @Deprecated public ActivityTestRule(Class<T!>!);
    ctor @Deprecated public ActivityTestRule(Class<T!>!, boolean);
    ctor @Deprecated public ActivityTestRule(Class<T!>!, boolean, boolean);
    ctor @Deprecated public ActivityTestRule(Class<T!>!, String, int, boolean, boolean);
    method @Deprecated protected void afterActivityFinished();
    method @Deprecated protected void afterActivityLaunched();
    method @Deprecated public org.junit.runners.model.Statement! apply(org.junit.runners.model.Statement!, org.junit.runner.Description!);
    method @Deprecated protected void beforeActivityLaunched();
    method @Deprecated public void finishActivity();
    method @Deprecated public T! getActivity();
    method @Deprecated protected android.content.Intent! getActivityIntent();
    method @Deprecated public android.app.Instrumentation.ActivityResult! getActivityResult();
    method @Deprecated public T! launchActivity(android.content.Intent?);
    method @Deprecated public void runOnUiThread(Runnable!) throws java.lang.Throwable;
  }

  public class DisableOnAndroidDebug implements org.junit.rules.TestRule {
    ctor public DisableOnAndroidDebug(org.junit.rules.TestRule!);
    method public final org.junit.runners.model.Statement! apply(org.junit.runners.model.Statement!, org.junit.runner.Description!);
    method public boolean isDebugging();
  }

  public class GrantPermissionRule implements org.junit.rules.TestRule {
    method public final org.junit.runners.model.Statement! apply(org.junit.runners.model.Statement!, org.junit.runner.Description!);
    method public static androidx.test.rule.GrantPermissionRule! grant(java.lang.String!...);
  }

  public class ServiceTestRule implements org.junit.rules.TestRule {
    ctor public ServiceTestRule();
    ctor protected ServiceTestRule(long, java.util.concurrent.TimeUnit!);
    method protected void afterService();
    method public org.junit.runners.model.Statement! apply(org.junit.runners.model.Statement!, org.junit.runner.Description!);
    method protected void beforeService();
    method public android.os.IBinder! bindService(android.content.Intent) throws java.util.concurrent.TimeoutException;
    method public android.os.IBinder! bindService(android.content.Intent, android.content.ServiceConnection, int) throws java.util.concurrent.TimeoutException;
    method public void startService(android.content.Intent) throws java.util.concurrent.TimeoutException;
    method public void unbindService();
    method public static androidx.test.rule.ServiceTestRule! withTimeout(long, java.util.concurrent.TimeUnit!);
  }

  @Deprecated public class UiThreadTestRule implements org.junit.rules.TestRule {
    ctor @Deprecated public UiThreadTestRule();
    method @Deprecated public org.junit.runners.model.Statement! apply(org.junit.runners.model.Statement!, org.junit.runner.Description!);
    method @Deprecated public void runOnUiThread(Runnable!) throws java.lang.Throwable;
    method @Deprecated protected boolean shouldRunOnUiThread(org.junit.runner.Description!);
  }

}

package androidx.test.rule.logging {

  @Deprecated @RequiresApi(21) public class AtraceLogger {
    method @Deprecated public void atraceStart(java.util.Set<java.lang.String!>!, int, int, java.io.File!, String!) throws java.io.IOException;
    method @Deprecated public void atraceStop() throws java.io.IOException, java.lang.InterruptedException;
    method @Deprecated public static androidx.test.rule.logging.AtraceLogger! getAtraceLoggerInstance(android.app.Instrumentation!);
  }

}

package androidx.test.rule.provider {

  @Deprecated public class ProviderTestRule implements org.junit.rules.TestRule {
    method @Deprecated protected void afterProviderCleanedUp();
    method @Deprecated public org.junit.runners.model.Statement! apply(org.junit.runners.model.Statement!, org.junit.runner.Description!);
    method @Deprecated protected void beforeProviderSetup();
    method @Deprecated public android.content.ContentResolver! getResolver();
    method @Deprecated public void revokePermission(String);
    method @Deprecated public void runDatabaseCommands(String, java.lang.String!...);
  }

  @Deprecated public static class ProviderTestRule.Builder {
    ctor @Deprecated public <T extends android.content.ContentProvider> ProviderTestRule.Builder(Class<T!>, String);
    method @Deprecated public <T extends android.content.ContentProvider> androidx.test.rule.provider.ProviderTestRule.Builder! addProvider(Class<T!>, String);
    method @Deprecated public androidx.test.rule.provider.ProviderTestRule! build();
    method @Deprecated public androidx.test.rule.provider.ProviderTestRule.Builder! setDatabaseCommands(String, java.lang.String!...);
    method @Deprecated public androidx.test.rule.provider.ProviderTestRule.Builder! setDatabaseCommandsFile(String, java.io.File);
    method @Deprecated public androidx.test.rule.provider.ProviderTestRule.Builder! setDatabaseFile(String, java.io.File);
    method @Deprecated public androidx.test.rule.provider.ProviderTestRule.Builder! setPrefix(String);
  }

}

