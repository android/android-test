load("//build_extensions:release.bzl", "axt_release_lib")
load("//build_extensions:maven_repo.bzl", "maven_artifact")
load(
    "//build_extensions:axt_versions.bzl",
    "ANDROIDX_ANNOTATION_VERSION",
    "ANDROIDX_CONCURRENT_VERSION",
    "ANDROIDX_LIFECYCLE_VERSION",
    "ANDROIDX_TRACING_VERSION",
    "CORE_VERSION",
    "GUAVA_LISTENABLEFUTURE_VERSION",
    "KOTLIN_VERSION",
    "MONITOR_VERSION",
    "SERVICES_VERSION",
)
load("@io_bazel_rules_kotlin//kotlin:android.bzl", "kt_android_library")

# Description: Build rules for building androidx.test.core from source
licenses(["notice"])

package(
    default_visibility = [
        "//visibility:public",
    ],
)

kt_android_library(
    name = "core_internal",
    srcs = glob(
        [
            "**/*.java",
            "**/*.kt",
        ],
        exclude = glob(["lint/*.kt"]),
    ),
    exports_manifest = 1,
    manifest = "AndroidManifest.xml",
    resource_files = glob(["res/**"]),
    tags = ["alt_dep=//core"],
    visibility = ["//visibility:private"],
    deps = [
        "//:androidx_annotation",
        "//:androidx_concurrent_futures",
        "//:androidx_lifecycle_common",
        "//:androidx_tracing",
        "//annotation",
        "//runner/monitor",
        "//services/storage",
        "@maven_listenablefuture//:com_google_guava_listenablefuture",
    ],
)

# TODO(b/199522848): delete these targets once espresso moves to testonly
android_library(
    name = "core",
    testonly = 1,
    exports = [":core_internal"],
)

android_library(
    name = "core_not_test_only",
    visibility = ["//espresso/core/java/androidx/test/espresso:__subpackages__"],
    exports = [":core_internal"],
)

android_library(
    name = "core_test_only",
    visibility = ["//visibility:public"],
    exports = [":core_internal"],
)

# group of targets to use to produce release binary + docs
android_library(
    name = "core_release_lib",
    testonly = 1,
    exports = [
        ":core_internal",
    ],
)

# Generate rules for the release artifacts. This generates three targets
# genrule output: core_release_no_deps.jar and core_release.aar
# a java_library target libcore_release_no_deps
axt_release_lib(
    name = "core_release",
    # keep all androidx.test.core classes except androidx.test.core.R, since that will be
    # auto-generated by consuming build system
    keep_spec = "androidx/test/core/.*|META-INF/.*androidx_test_core.*kotlin_module",
    remove_spec = "androidx/test/core/R[$$\\.]",
    resource_files = glob(["res/**"]),
    deps = [
        ":core_release_lib",
    ],
)

maven_artifact(
    name = "core_maven_artifact",
    src = ":core_release.aar",
    artifact_deps = [
        "androidx.annotation:annotation:%s" % ANDROIDX_ANNOTATION_VERSION,
        "androidx.test:monitor:%s" % MONITOR_VERSION,
        "androidx.test.services:storage:%s" % SERVICES_VERSION,
        "androidx.lifecycle:lifecycle-common:%s" % ANDROIDX_LIFECYCLE_VERSION,
        "androidx.tracing:tracing:%s" % ANDROIDX_TRACING_VERSION,
        "com.google.guava:listenablefuture:%s" % GUAVA_LISTENABLEFUTURE_VERSION,
        "org.jetbrains.kotlin:kotlin-stdlib:%s" % KOTLIN_VERSION,
        "androidx.concurrent:concurrent-futures:%s" % ANDROIDX_CONCURRENT_VERSION,
    ],
    artifact_id = "core",
    group_id = "androidx.test",
    last_updated = "20180403000000",
    src_jar = ":libcore_internal-src.jar",
    version = "%s" % CORE_VERSION,
)
